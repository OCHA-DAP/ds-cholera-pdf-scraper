{
  "version": "v1.1.4",
  "created_at": "2025-08-13T14:06:00",
  "description": "instruct to first python and then LLM with specifics on CasesConfirmed",
  "system_prompt": "You are a data extraction expert. Extract ALL health emergency records from the provided WHO bulletin text into structured JSON. Your goal is comprehensive extraction with strict adherence to table structure.",
  "user_prompt_template": "Extract ALL health emergency records from this WHO emergency bulletin text.\n\n\nIMPORTANT: \n\n- First create and execute a python script to extract the table data. Keep the table and python code in memory - DO NOT output any code or table yet. Check your extracted table against the document text using your intelligence.\n- Return ONLY a JSON array containing ALL extracted records. No explanations.\n- Any dash/or empty field keep as empty, never try to fill empty fields with data from another field.\n- Deaths represent \"reported deaths\" and have nothing to do with confirmed cases. Therefore, never use death number for CasesConfirmed even if CasesConfirmed has no value.\n- In the case of discrepancies between values in table and other descriptive values favour the table data unless there is an obvious error in the table data and not the text.\n- Table headers establish consistent column order throughout the entire document.** Once you identify the table structure (e.g., Country | Event | Grade | TotalCases | CasesConfirmed | Deaths | CFR), this exact column order applies to ALL subsequent tables.\n\n\n\nTABLE PROCESSING EXAMPLE:\n```\nIf you see headers: Country | Event | Grade | TotalCases | CasesConfirmed | Deaths | CFR\nAnd a row shows:   Cameroon | Cholera | Grade 3 | 27160 | 18000 | 400 | 2.3\n\nThen extract EXACTLY:\n- Country: \"Cameroon\" (column 1)\n- Event: \"Cholera\" (column 2) \n- Grade: \"Grade 3\" (column 3)\n- TotalCases: 27160 (column 4)\n- CasesConfirmed: 18000 (column 5)\n- Deaths: 400 (column 6)\n- CFR: 2.3 (column 7)\n```\n\nExpected JSON schema for EACH record:\n{{\n    \"Country\": \"string\",\n    \"Event\": \"string (disease name like Cholera, Mpox, Measles, etc.)\",\n    \"Grade\": \"string (e.g., Grade 3, Grade 2, Ungraded)\",\n    \"DateNotified\": \"string (date when WHO was notified)\",\n    \"StartReportingPeriod\": \"string\",\n    \"EndReportingPeriod\": \"string\", \n    \"TotalCases\": \"number (from table column position)\",\n    \"CasesConfirmed\": \"number (CRITICAL - from exact table column position)\",\n    \"Deaths\": \"number (from table column position)\",\n    \"CFR\": \"number (case fatality rate as number, not percentage string)\",\n    \"PageNumber\": \"number (if identifiable from text)\"\n}}\n\nIMPORTANT: \n- Process the ENTIRE document systematically\n- Use the established table column order consistently across all tables in the document\n- Extract every health emergency record, prioritizing table data over text\n\nReturn ONLY a JSON array containing ALL extracted records. No explanations.\n\nTEXT TO PROCESS:\n{text_content}",
  "examples": null
}